# 基本配置
spring.application.name=springboot-mvc
server.port=8080

# jsp 配置
spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp
spring.mvc.hiddenmethod.filter.enabled=true

# JPA 配置
# 自動更新表結構，可根據需要設置為 create, update, validate, none
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# mysql 配置
spring.datasource.url=jdbc:mysql://localhost:3306/projectinformation?useSSL=false&serverTimezone=Asia/Taipei&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=abc123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JWT 配置 (請替換為一個強健的密鑰，至少 32 字節，base64 編碼)
app.jwtSecret=437c6AD/HB84ykBBbWlt1C4NwirswJRE9QO7whSvXwI=
# JWT Token 的過期時間，以毫秒為單位 (例如 86400000 毫秒 = 24 小時)
app.jwtExpirationMs=86400000 

# ... (保留您現有的其他配置，例如 JPA、MySQL、JWT 等) ...

# Spring Mail 配置 (指向本地 MailHog 伺服器)
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username= # MailHog 不需要用戶名
spring.mail.password= # MailHog 不需要密碼
spring.mail.properties.mail.smtp.auth=false # MailHog 通常不需要認證
spring.mail.properties.mail.smtp.starttls.enable=false # MailHog 通常不需要 STARTTLS
spring.mail.properties.mail.smtp.starttls.required=false # MailHog 通常不需要 STARTTLS
# spring.mail.properties.mail.smtp.ssl.trust= # 如果不需要 SSL/TLS，這行可以註釋掉

# 您的應用程式發送郵件時的「發件人」地址
# 這個地址在 MailHog 中會顯示出來，但不需要是真實存在的郵箱
spring.mail.properties.mail.smtp.from=test@your-app.com # 您可以替換為您應用程式的發件人名稱

# 前端應用程式的基礎 URL (用於構建密碼重設連結)
# 這裡假設您的前端運行在 http://localhost:5173
frontend.url=http://localhost:5173
